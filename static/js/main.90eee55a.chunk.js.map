{"version":3,"sources":["components/Header/Header.jsx","hooks/useLocalStorage.js","hooks/useEventListener.js","components/QuestionsList/Question/Question.jsx","components/QuestionsList/QuestionsList.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","as","bg","expand","Container","fluid","Brand","href","Toggle","Collapse","id","Nav","className","style","maxHeight","navbarScroll","Link","disabled","Form","FormControl","type","placeholder","Button","variant","useLocalStorage","key","initialValue","useState","item","localStorage","JSON","parse","error","console","log","currentState","updateCurrentState","setCurrentState","useCallback","value","stringify","eventName","handler","element","window","savedHandler","useRef","useEffect","current","addEventListener","eventListener","event","removeEventListener","useEventListener","e","newValue","Question","question","imageRef","Holder","run","images","Card","width","Img","ref","src","Body","Title","title","Text","description","QuestionsList","questions","currentPage","setCurrentPage","handlePageClick","target","tabIndex","lastQuestionIndex","firstQuestionIndex","currentQuestions","slice","pagesLength","Math","ceil","length","pageItems","number","isActive","push","Pagination","Item","active","onClick","marginBottom","gap","map","questionIndex","marginTop","Prev","previousPage","Next","nextPage","addTheme","fg","size","fontweight","text","App","margin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yVAGe,SAASA,IACtB,OACE,cAACC,EAAA,EAAD,CAAQC,GAAG,SAASC,GAAG,QAAQC,OAAO,KAAtC,SACE,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,cAACL,EAAA,EAAOM,MAAR,CAAcC,KAAK,IAAnB,8BACA,cAACP,EAAA,EAAOQ,OAAR,CAAe,gBAAc,iBAC7B,eAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,eAApB,UACE,eAACC,EAAA,EAAD,CAAKC,UAAU,uBAAuBC,MAAO,CAAEC,UAAW,SAAWC,cAAY,EAAjF,UACE,cAACJ,EAAA,EAAIK,KAAL,CAAUT,KAAK,WAAf,4BACA,cAACI,EAAA,EAAIK,KAAL,CAAUT,KAAK,WAAf,iCACA,cAACI,EAAA,EAAIK,KAAL,CAAUT,KAAK,IAAIU,UAAQ,EAA3B,qCAIF,eAACC,EAAA,EAAD,CAAMN,UAAU,SAAhB,UACE,cAACO,EAAA,EAAD,CACEC,KAAK,SACLC,YAAY,0BACZT,UAAU,OACV,aAAW,4BAEb,cAACU,EAAA,EAAD,CAAQC,QAAQ,kBAAhB,+B,mBCpBG,SAASC,EAAgBC,EAAKC,GAC3C,MAA2CC,oBAAS,WAClD,IACE,IAAMC,EAAOC,aAAaJ,GAC1B,OAAOG,EAAOE,KAAKC,MAAMH,GAAQF,EACjC,MAAOM,GAEP,OADAC,QAAQC,IAAIF,GACLN,MANX,mBAAOS,EAAP,KAAqBC,EAArB,KAUMC,EAAkBC,uBACtB,SAACC,GACCV,aAAaJ,GAAOK,KAAKU,UAAUD,GACnCH,EAAmBG,KAErB,CAACd,IAcH,OChCa,SAA0BgB,EAAWC,GAA4B,IAAnBC,EAAkB,uDAARC,OAE/DC,EAAeC,mBAMrBC,qBAAU,WACRF,EAAaG,QAAUN,IACtB,CAACA,IAEJK,qBACE,WAIE,GADoBJ,GAAWA,EAAQM,iBACvC,CAGA,IAAMC,EAAgB,SAACC,GAAD,OAAWN,EAAaG,QAAQG,IAMtD,OAHAR,EAAQM,iBAAiBR,EAAWS,GAG7B,WACLP,EAAQS,oBAAoBX,EAAWS,OAG3C,CAACT,EAAWE,IDAdU,CAAiB,UATWf,uBAC1B,SAACgB,GACKA,EAAE7B,MAAQA,GACZW,EAAmBkB,EAAEC,SAAWzB,KAAKC,MAAMuB,EAAEC,UAAY7B,KAG7D,CAACD,EAAKC,KAKD,CAACS,EAAcE,G,YE9BT,SAASmB,EAAT,GAAiC,IAAbC,EAAY,EAAZA,SAC3BC,EAAWZ,mBAQjB,OANAC,qBAAU,WACRY,IAAOC,IAAI,CACTC,OAAQH,EAASV,YAElB,CAACU,IAGF,eAACI,EAAA,EAAD,CAAMjD,MAAO,CAAEkD,MAAO,SAAtB,UACE,cAACD,EAAA,EAAKE,IAAN,CAAUC,IAAKP,EAAUnC,QAAQ,MAAM2C,IAAI,kCAC3C,eAACJ,EAAA,EAAKK,KAAN,WACE,cAACL,EAAA,EAAKM,MAAN,UAAaX,EAASY,QACtB,cAACP,EAAA,EAAKQ,KAAN,UAAYb,EAASc,cACrB,cAACjD,EAAA,EAAD,gC,MCTO,SAASkD,EAAT,GAAuC,IAAdC,EAAa,EAAbA,UACtC,EAAsCjD,EAAgB,cAAe,GAArE,mBAAOkD,EAAP,KAAoBC,EAApB,KAEA,SAASC,EAAgBtB,GACvBqB,EAAerB,EAAEuB,OAAOC,UAG1B,IAAMC,EATiB,EASGL,EACpBM,EAAqBD,EAVJ,EAWjBE,EAAmBR,EAAUS,MAAMF,EAAoBD,GAEvDI,EAAcC,KAAKC,KAAKZ,EAAUa,OAbjB,GA6BvB,IADA,IAAMC,EAAY,GACTC,EAAS,EAAGA,GAAUL,EAAaK,IAAU,CACpD,IAAMC,EAAWD,IAAWd,EAC5Ba,EAAUG,KACR,cAACC,EAAA,EAAWC,KAAZ,CACEd,SAAUU,EAEVK,OAAQJ,EACRK,QAASL,EAAW,KAAOb,EAJ7B,SAMGY,GAJIA,IASX,OACE,eAACpF,EAAA,EAAD,CAAWH,GAAG,UAAUW,UAAU,gBAAlC,UACE,eAACR,EAAA,EAAD,CACES,MAAO,CAAEkF,aAAc,QACvBnF,UAAU,oDACVP,OAAK,EAHP,UAKE,oBAAIO,UAAU,uBAAd,4BACA,cAACU,EAAA,EAAD,kCAGF,cAAClB,EAAA,EAAD,CAAWC,OAAK,EAACO,UAAU,qCAAqCC,MAAO,CAAEmF,IAAK,QAA9E,SACGf,EAAiBgB,KAAI,SAACxC,EAAUyC,GAAX,OACpB,cAAC1C,EAAD,CAAUC,SAAUA,GAAeyC,QAIvC,cAAC9F,EAAA,EAAD,CAAWS,MAAO,CAAEsF,UAAW,QAAU9F,OAAK,EAA9C,SACE,eAACsF,EAAA,EAAD,WACE,cAACA,EAAA,EAAWS,KAAZ,CAAiBN,QAzCzB,WACE,IAAMO,EAAe3B,EAAc,EAC/B2B,EAAe,GACjB1B,EAAe0B,IAsCX,sBACCd,EACD,cAACI,EAAA,EAAWW,KAAZ,CAAiBR,QAjDzB,WACE,IAAMS,EAAW7B,EAAc,EAC3B6B,GAAYpB,GACdR,EAAe4B,IA8CX,0BCnEV5C,IAAO6C,SAAS,OAAQ,CACtBtG,GAAI,UACJuG,GAAI,UACJC,KAAM,GACNC,WAAY,SACZC,KAAM,eAGR,IAAMnC,EAAY,CAChB,CACEJ,MAAO,gBACPE,YAAa,kBAEf,CACEF,MAAO,yBACPE,YAAa,8CAEf,CACEF,MAAO,yBACPE,YAAa,8CAEf,CACEF,MAAO,yBACPE,YAAa,8CAEf,CACEF,MAAO,kBACPE,YAAa,2BAEf,CACEF,MAAO,kBACPE,YAAa,2BAEf,CACEF,MAAO,cACPE,YAAa,4BAEf,CACEF,MAAO,kBACPE,YAAa,gCAIF,SAASsC,IACtB,OACE,qCACE,cAAC,EAAD,IACA,sBAAMhG,MAAO,CAAEiG,OAAQ,aAAvB,SACE,cAAC,EAAD,CAAerC,UAAWA,SCrDlC,IAYesC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,EAAD,MAEFc,SAASC,eAAe,SAI1Bb,M","file":"static/js/main.90eee55a.chunk.js","sourcesContent":["import { Container, Form, FormControl, Nav, Navbar, Button } from 'react-bootstrap';\nimport './Header.scss';\n\nexport default function Header() {\n  return (\n    <Navbar as=\"header\" bg=\"light\" expand=\"lg\">\n      <Container fluid>\n        <Navbar.Brand href=\"#\">Test Application</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\n        <Navbar.Collapse id=\"navbarScroll\">\n          <Nav className=\"me-auto my-2 my-lg-0\" style={{ maxHeight: '100px' }} navbarScroll>\n            <Nav.Link href=\"#action1\">Questions list</Nav.Link>\n            <Nav.Link href=\"#action2\">Create new question</Nav.Link>\n            <Nav.Link href=\"#\" disabled>\n              Some disabled button\n            </Nav.Link>\n          </Nav>\n          <Form className=\"d-flex\">\n            <FormControl\n              type=\"search\"\n              placeholder=\"Search for questions...\"\n              className=\"me-2\"\n              aria-label=\"Search for questions...\"\n            />\n            <Button variant=\"outline-success\">Search</Button>\n          </Form>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n","import { useState, useCallback } from 'react';\n\nimport useEventListener from './useEventListener';\n\nexport default function useLocalStorage(key, initialValue) {\n  const [currentState, updateCurrentState] = useState(() => {\n    try {\n      const item = localStorage[key];\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  const setCurrentState = useCallback(\n    (value) => {\n      localStorage[key] = JSON.stringify(value);\n      updateCurrentState(value);\n    },\n    [key],\n  );\n\n  const localStorageChanged = useCallback(\n    (e) => {\n      if (e.key === key) {\n        updateCurrentState(e.newValue ? JSON.parse(e.newValue) : initialValue);\n      }\n    },\n    [key, initialValue],\n  );\n\n  useEventListener('storage', localStorageChanged);\n\n  return [currentState, setCurrentState];\n}\n","import { useRef, useEffect } from 'react';\n\nexport default function useEventListener(eventName, handler, element = window) {\n  // Create a ref that stores handler\n  const savedHandler = useRef();\n\n  // Update ref.current value if handler changes.\n  // This allows our effect below to always get latest handler ...\n  // ... without us needing to pass it in effect deps array ...\n  // ... and potentially cause effect to re-run every render.\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n\n  useEffect(\n    () => {\n      // Make sure element supports addEventListener\n      // On\n      const isSupported = element && element.addEventListener;\n      if (!isSupported) return;\n\n      // Create event listener that calls handler function stored in ref\n      const eventListener = (event) => savedHandler.current(event);\n\n      // Add event listener\n      element.addEventListener(eventName, eventListener);\n\n      // Remove event listener on cleanup\n      return () => {\n        element.removeEventListener(eventName, eventListener);\n      };\n    },\n    [eventName, element] // Re-run if eventName or element changes\n  );\n}\n","import Holder from 'holderjs';\nimport { useEffect, useRef } from 'react';\nimport { Card, Button } from 'react-bootstrap';\n\nexport default function Question({ question }) {\n  const imageRef = useRef();\n\n  useEffect(() => {\n    Holder.run({\n      images: imageRef.current,\n    });\n  }, [imageRef]);\n\n  return (\n    <Card style={{ width: '255px' }}>\n      <Card.Img ref={imageRef} variant=\"top\" src=\"holder.js/100px143?theme=card\" />\n      <Card.Body>\n        <Card.Title>{question.title}</Card.Title>\n        <Card.Text>{question.description}</Card.Text>\n        <Button>Take a test</Button>\n      </Card.Body>\n    </Card>\n  );\n}\n","import { Container, Button, Pagination } from 'react-bootstrap';\n\nimport useLocalStorage from '../../hooks/useLocalStorage';\n\nimport Question from './Question/Question';\n\nimport './QuestionsList.scss';\n\nconst questionsPerPage = 6;\n\nexport default function QuestionsList({ questions }) {\n  const [currentPage, setCurrentPage] = useLocalStorage('currentPage', 1);\n\n  function handlePageClick(e) {\n    setCurrentPage(e.target.tabIndex);\n  }\n\n  const lastQuestionIndex = currentPage * questionsPerPage;\n  const firstQuestionIndex = lastQuestionIndex - questionsPerPage;\n  const currentQuestions = questions.slice(firstQuestionIndex, lastQuestionIndex);\n\n  const pagesLength = Math.ceil(questions.length / questionsPerPage);\n\n  function handlePageNext() {\n    const nextPage = currentPage + 1;\n    if (nextPage <= pagesLength) {\n      setCurrentPage(nextPage);\n    }\n  }\n  function handlePagePrevious() {\n    const previousPage = currentPage - 1;\n    if (previousPage > 0) {\n      setCurrentPage(previousPage);\n    }\n  }\n\n  const pageItems = [];\n  for (let number = 1; number <= pagesLength; number++) {\n    const isActive = number === currentPage;\n    pageItems.push(\n      <Pagination.Item\n        tabIndex={number}\n        key={number}\n        active={isActive}\n        onClick={isActive ? null : handlePageClick}\n      >\n        {number}\n      </Pagination.Item>,\n    );\n  }\n\n  return (\n    <Container as=\"section\" className=\"questionslist\">\n      <Container\n        style={{ marginBottom: '39px' }}\n        className=\"d-flex justify-content-between align-items-center\"\n        fluid\n      >\n        <h1 className=\"questionslist__title\">Questions list</h1>\n        <Button>Add new question</Button>\n      </Container>\n\n      <Container fluid className=\"d-flex align-items-start flex-wrap\" style={{ gap: '43px' }}>\n        {currentQuestions.map((question, questionIndex) => (\n          <Question question={question} key={questionIndex} />\n        ))}\n      </Container>\n\n      <Container style={{ marginTop: '23px' }} fluid>\n        <Pagination>\n          <Pagination.Prev onClick={handlePagePrevious}>Previous</Pagination.Prev>\n          {pageItems}\n          <Pagination.Next onClick={handlePageNext}>Next</Pagination.Next>\n        </Pagination>\n      </Container>\n    </Container>\n  );\n}\n","import Holder from 'holderjs';\n\nimport Header from './components/Header/Header';\nimport QuestionsList from './components/QuestionsList/QuestionsList';\n\nHolder.addTheme('card', {\n  bg: '#868e96',\n  fg: '#dee2e6',\n  size: 16,\n  fontweight: 'normal',\n  text: 'Images cap',\n});\n\nconst questions = [\n  {\n    title: 'Base question',\n    description: 'First question',\n  },\n  {\n    title: 'Multiple var. question',\n    description: 'This question has several correct answers.',\n  },\n  {\n    title: 'Multiple var. question',\n    description: 'This question has several correct answers.',\n  },\n  {\n    title: 'Multiple var. question',\n    description: 'This question has several correct answers.',\n  },\n  {\n    title: 'Passed question',\n    description: 'Passed question example',\n  },\n  {\n    title: 'Failed question',\n    description: 'Failed question example',\n  },\n  {\n    title: 'Placeholder',\n    description: 'Descriptive placeholder.',\n  },\n  {\n    title: 'Just a question',\n    description: 'For visualising pagination.',\n  },\n];\n\nexport default function App() {\n  return (\n    <>\n      <Header />\n      <main style={{ margin: '68px 88px' }}>\n        <QuestionsList questions={questions} />\n      </main>\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/bootstrap-custom.scss';\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function to log results (for example: reportWebVitals(console.log)) or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}